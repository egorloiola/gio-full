@charset "UTF-8";
/* $color-card-shadow: Цвет тени при наведении (:hover) */
/* Задал сетку 100%, а уже потом margin модификации row--navigation подстраиваю исходя из области.  */
.row--navigation {
  --grid-horizontal-margin: 80px;
  --grid-vertical-margin: 10px; }

.row--footer {
  --grid-horizontal-margin: 80px; }

/* Данная запись через переменные CSS позволяет их делать более гибкими для изменения самой переменной для respond. */
/* Расстояние между колонками, карточками, элементами сетки.  */
/* Расстояние между строками, карточками, элементами сетки.  */
.row--navigation {
  --card-size: calc(80px + 5vw); }

@media only screen and (max-width: 900px) {
  .row--navigation {
    --card-size: calc(70px + 7vw); } }

/* Толщина линии анимации */
/* Размер карточки исходит из $grid-col-navigation + место для анимации */
/* Размер логотипа, исходя из размера карточки. */
/* $card-size увеличенный на 10% */
/* $card-size увеличенный на 10% минус толщина тени($path-width). */
/* Время анимации */
.btn {
  --pxfix: calc(1vw); }

/* $btn-600-font-size за основу взято желание видет при ширине экрана в 310px = 16px, а при 600px = 24px. формулой линейной интерполяции. При 100vw = 310px формула обретает вид 16 + ~ * 0 = 16. */
:root {
  --size-gap-section: 1.5vh; }

:root {
  --size-footer-clip: 2.5;
  --size-section: 0.965;
  --h-footer: calc((100vh * var(--size-section)) / var(--size-footer-clip));
  /* переменная зависищая от размера изгиба футера. 
    а она зависит по формулам от clip-path footer = calc(20 * 2.5 * 1%),
    чтобы размер всегда соответсовал началу изгиба footer, 40 - значит в 2 раза больше */
  --clip-path-footer-x2: calc((40 * var(--size-footer-clip)) * (var(--h-footer) * 0.01));
  --clip-path-footer-d8: calc(((40 * var(--size-footer-clip)) * (var(--h-footer) * 0.01) / 8));
  --sqrt3: sqrt(3);
  /*Учитываем вращение, взяв за диагональ --cube-side-clip-path-footer,
    выражаем сторону, чтобы учесть размер вращения куба.*/
  --cube-side: calc(var(--clip-path-footer-d8) / var(--sqrt3)); }

@media only screen and (max-width: 900px) {
  :root {
    --clip-path-footer-d8: calc(((40 * var(--size-footer-clip)) * (var(--h-footer) * 0.01) / 16)); } }

@keyframes MoveRight {
  0% {
    transform: translateX(-10rem); }
  50% {
    transform: translateX(1rem); }
  100% {
    transform: translateX(0); } }

@keyframes MoveLeft {
  0% {
    transform: translateX(10rem); }
  50% {
    transform: translateX(-1rem); }
  100% {
    transform: translateX(0); } }

@keyframes MoveBot {
  0% {
    transform: translateY(10rem); }
  50% {
    transform: translateY(-1rem); }
  100% {
    transform: translateY(0); } }

@keyframes clean {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes clipMe {
  0%,
  100% {
    clip: rect(0rem, calc(var(--card-size) * 1.1), 1.5px, 0rem); }
  25% {
    clip: rect(0rem, 1.5px, calc(var(--card-size) * 1.1), 0rem); }
  50% {
    clip: rect(calc(calc(var(--card-size) * 1.1) - 1.5px), calc(var(--card-size) * 1.1), calc(var(--card-size) * 1.1), 0rem); }
  75% {
    clip: rect(0rem, calc(var(--card-size) * 1.1), calc(var(--card-size) * 1.1), calc(calc(var(--card-size) * 1.1) - 1.5px)); } }

/* Анимация окантовки */
/* beam--1 анимация света при наведениыи из центра */
@keyframes beam--1 {
  0% {
    box-shadow: 0 0 50px 0px rgba(255, 255, 255, 0.1); }
  100% {
    box-shadow: 0 0 200px 250px rgba(255, 255, 255, 0.1); } }

/* beam--2  анимация света при наведении из контура */
@keyframes beam--2 {
  0% {
    box-shadow: 0 0 50px 0px rgba(255, 255, 255, 0.15); }
  100% {
    box-shadow: 0 0 200px 250px rgba(255, 255, 255, 0.15); } }

@keyframes blur {
  from {
    filter: blur(0); }
  to {
    filter: blur(3px); } }

@keyframes border-bot {
  from {
    border-bottom: 0px solid white; }
  to {
    opacity: 1;
    border-bottom: 1px solid white;
    width: calc(50%);
    height: 1px; } }

@keyframes border-mid-w {
  from { }
  to {
    width: calc(50% - 1px); } }

@keyframes border-mid-h {
  from { }
  to {
    height: calc(100%); } }

/* btn-600 */
@keyframes rotatecw {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(-360deg); } }

@keyframes rotateccw {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(360deg); } }

/* btn-600 hover */
@keyframes zalivka {
  from {
    background: rgba(255, 255, 255, 0.02); }
  to {
    background: rgba(255, 255, 255, 0.06); } }

.card::before, .card::after {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0; }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }
  @media only screen and (max-width: 900px) {
    html {
      font-size: 50%; } }
  @media only screen and (max-width: 600px) {
    html {
      font-size: 37.5%; } }

body {
  padding: calc(1 * var(--size-gap-section)); }
  @media only screen and (max-width: 900px) {
    body {
      padding: calc(2/3 * var(--size-gap-section)); } }
  @media only screen and (max-width: 600px) {
    body {
      padding: 0; } }

/* debag */
/* убрал элементы, которые не нужно отслеживать */
.cube-perspective {
  outline: none; }

.cube * {
  outline: none; }

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #495057; }

.header-title {
  color: #ffffff;
  text-transform: uppercase; }
  @media only screen and (max-width: 340px) {
    .header-title {
      overflow: hidden; } }
  .header-title--main {
    display: block;
    letter-spacing: calc(2px + 1.5vw);
    padding-left: calc(2px + 1.5vw);
    font-size: calc(25px + 2.5vw);
    font-weight: 400; }
    @media only screen and (max-width: 600px) {
      .header-title--main {
        letter-spacing: calc(calc(2px + 1.5vw) * 0.8);
        padding-left: calc(calc(2px + 1.5vw) * 0.8); } }
  .header-title--sub {
    display: block;
    white-space: nowrap;
    letter-spacing: calc(calc(2px + 1.5vw) * 0.6);
    padding-left: calc(calc(2px + 1.5vw) * 0.6);
    font-size: calc(calc(25px + 2.5vw) / 3);
    font-weight: 700; }

/* Анимация */
.header-title--main {
  animation: MoveRight 5s ease-out, clean 5s ease-out; }

.header-title--sub {
  animation: MoveLeft 5s ease-out, clean 5s ease-out; }

.u-filter-gleam {
  filter: drop-shadow(0px 0px 3px rgba(254, 252, 232, 0.5)); }

.section-navigation {
  position: relative;
  margin-top: calc((-20vh * 0.965) + 1 * var(--size-gap-section));
  height: calc(100vh * 0.965);
  clip-path: polygon(100% 0%, 100% 100%, 80% 80%, 20% 80%, 0% 100%, 0% 0%, 20% 20%, 80% 20%);
  background-color: black;
  overflow: hidden; }
  .section-navigation__background {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% + 25vh);
    height: calc(100% + 25vh);
    background-position: right bottom 25vh;
    background-image: url(../img/pages/navigation.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    filter: brightness(1.2); }
    @media only screen and (max-width: 1200px) {
      .section-navigation__background {
        width: calc(100% + 35vh);
        height: calc(100% + 35vh);
        background-position: right bottom 35vh;
        /* Адаптация исходя из картинки */ } }
    @media only screen and (max-width: 900px) {
      .section-navigation__background {
        background-position: right bottom 27.3vh;
        /* Адаптация исходя из картинки */ } }
    @media only screen and (max-width: 600px) {
      .section-navigation__background {
        background-position: right 3.5% bottom 27.3vh;
        /* Адаптация исходя из картинки */ } }
    @media only screen and (max-width: 340px) {
      .section-navigation__background {
        background-position: left bottom 27.3vh;
        /* Адаптация исходя из картинки, убрал персонажа. */ } }
  @media only screen and (max-width: 900px) {
    .section-navigation {
      margin-top: calc((-20vh * 0.965) + 2/3 * var(--size-gap-section));
      clip-path: polygon(100% 100%, 70% 90%, 30% 90%, 0% 100%, 0% 0%, 30% 20%, 70% 20%, 100% 0%); } }
  @media only screen and (max-width: 600px) {
    .section-navigation {
      margin-top: calc((-20vh * 0.965) + 1/5 * var(--size-gap-section));
      clip-path: polygon(0% 0%, 35% 20%, 65% 20%, 100% 0%, 100% 100%, 65% 90%, 35% 90%, 0% 100%); } }
  @media only screen and (max-width: 340px) {
    .section-navigation {
      clip-path: polygon(100% 100%, 0% 90%, 0% 0%, 50% 20%, 100% 0%); } }

.header {
  height: calc(100vh *  0.965);
  clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
  background-image: linear-gradient(to right top, rgba(255, 224, 102, 0.3), rgba(51, 154, 240, 0.3)), url(../img/pages/sample/header-1800.webp);
  background-position: 30% 0%;
  background-size: cover;
  overflow: hidden; }
  .header__text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .header__text-box {
    top: 30%;
    text-align: center; }
    @media only screen and (max-width: 900px) {
      .header__text-box {
        top: calc(30% - 2rem); } }
  @media screen and (min-resolution: 192dpi) and (min-width: 600px), screen and (min-width: 2000px) {
    .header {
      background-image: linear-gradient(to right top, rgba(177, 151, 252, 0.3), rgba(132, 94, 247, 0.3)), url(../img/pages/sample/header-3600.webp); } }
  @media only screen and (max-width: 900px) {
    .header {
      background-position: 23.5% 0%;
      clip-path: polygon(100% 80%, 70% 100%, 30% 100%, 0% 80%, 0% 0%, 100% 0%); } }
  @media only screen and (max-width: 600px) {
    .header {
      background-position: 16.5% 0%;
      clip-path: polygon(100% 80%, 65% 100%, 35% 100%, 0% 80%, 0% 0%, 100% 0%); } }
  @media only screen and (max-width: 340px) {
    .header {
      clip-path: polygon(100% 80%, 50% 100%, 0% 80%, 0% 0%, 100% 0%); } }

.footer {
  position: relative;
  background-image: linear-gradient(to top, #3bc9db, #bef264);
  height: calc((100vh * 0.965) / 2.5);
  overflow: hidden;
  clip-path: polygon(20% 0%, 80% 0%, 100% calc(20 * 2.5 * 1%), 100% 100%, 0% 100%, 0% calc(20 * 2.5 * 1%));
  margin-top: calc((-20vh * 0.965) + 1 * var(--size-gap-section)); }
  @media only screen and (max-width: 900px) {
    .footer {
      margin-top: calc((-10vh * 0.965) + 2/3 * var(--size-gap-section));
      clip-path: polygon(100% 100%, 0% 100%, 0% calc(10 * 2.5 * 1%), 30% 0%, 70% 0%, 100% calc(10 * 2.5 * 1%)); } }
  @media only screen and (max-width: 600px) {
    .footer {
      margin-top: calc((-10vh * 0.965) + 1/5 * var(--size-gap-section));
      clip-path: polygon(0% calc(10 * 2.5 * 1%), 35% 0%, 65% 0%, 100% calc(10 * 2.5 * 1%), 100% 100%, 0% 100%); } }
  @media only screen and (max-width: 340px) {
    .footer {
      clip-path: polygon(100% 100%, 0% 100%, 0% 0%, 100% calc(10 * 2.5 * 1%)); } }

/* footer backgraund  */
.footer-background {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% + 45vh);
  height: calc(100% + 45vh);
  background-position: right bottom 10vh;
  background-image: url(../img/pages/footer.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  filter: brightness(1.2); }

.row {
  position: relative;
  max-width: 100%; }
  .row [class^="col-"] {
    float: left;
    position: relative;
    /*  Добавил также relative всем col */ }
    .row [class^="col-"]:not(:last-child) {
      margin-right: var(--grid-horizontal-margin); }
  .row:last-child::after {
    content: "";
    display: table;
    clear: both; }

.row--navigation {
  width: 60%;
  height: 60%;
  /* Размер сетки из-за clip-path до 900px */ }
  .row--navigation {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .row--navigation .col-1-of-3 {
    width: calc((100% - 2 * var(--grid-horizontal-margin)) * 1/3);
    /* Задал ширину, а не минимальную ширину.  */
    height: calc(97vh * 0.6);
    /* 97vh - высота всей секции, минус 40% ушедшие на clip-path */
    /* debug */ }
  @media only screen and (max-width: 900px) {
    .row--navigation {
      top: 55%;
      width: 30%;
      height: calc(97vh * 0.7);
      /* Размер сетки из-за clip-path после 900px */ }
      .row--navigation .col-1-of-3 {
        width: 100%;
        height: calc((100% - (var(--grid-vertical-margin) * 2)) / 3); }
      .row--navigation [class^="col-"]:not(:last-child) {
        margin-bottom: var(--grid-vertical-margin); } }

.row--navigation {
  pointer-events: none; }

/* row активен для наведения мыши */
.row--navigation > .col-1-of-3 {
  pointer-events: none; }

/* row и col не активны для наведения мыши */
.row--navigation > .col-1-of-3 > * {
  pointer-events: auto; }

/* все остальное в row и col активно для наведения мыши */
.row--navigation:hover .col-1-of-3:not(:hover) {
  animation: blur ease-in .6s forwards; }

/* Когда что-то в row и col поддается :hover на col активируется эффект blur */
@media only screen and (max-width: 1400px) {
  .row--navigation {
    --grid-horizontal-margin: 60px; } }

@media only screen and (max-width: 1200px) {
  .row--navigation {
    --grid-horizontal-margin: 40px; } }

@media only screen and (max-width: 1000px) {
  .row--navigation {
    --grid-horizontal-margin: 30px; } }

.row--footer {
  width: 60%;
  height: var(--clip-path-footer-x2);
  overflow: hidden; }
  .row--footer {
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .row--footer {
    top: calc(var(--clip-path-footer-x2) / 2); }
  .row--footer [class^="col-"]:not(:last-child) {
    margin-right: 0; }
  .row--footer .col-1-of-2 {
    height: var(--clip-path-footer-x2); }
    .row--footer .col-1-of-2:nth-child(1) {
      min-width: calc(var(--clip-path-footer-x2)); }
    .row--footer .col-1-of-2:nth-child(2) {
      min-width: calc(100% - var(--clip-path-footer-x2));
      width: calc(100% - var(--clip-path-footer-x2)); }
  @media only screen and (max-width: 900px) {
    .row--footer {
      width: 100%; }
      .row--footer .col-1-of-2 {
        height: calc(var(--clip-path-footer-x2) / 2); }
        .row--footer .col-1-of-2:nth-child(1) {
          width: 40%;
          min-width: auto; }
          .row--footer .col-1-of-2:nth-child(1) {
            position: relative;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); }
          .row--footer .col-1-of-2:nth-child(1) {
            top: calc(var(--clip-path-footer-x2) / 4); }
        .row--footer .col-1-of-2:nth-child(2) {
          min-width: 100%; } }
  @media only screen and (max-width: 600px) {
    .row--footer .col-1-of-2:nth-child(1) {
      width: 30%;
      min-width: calc(var(--clip-path-footer-x2) / 2); } }
  @media only screen and (max-width: 340px) {
    .row--footer {
      height: calc(var(--h-footer) - (10vh * var(--size-section))); }
      .row--footer {
        top: calc(((var(--h-footer) - (10vh * var(--size-section))) / 2) + (10 * 2.5 * 1%)); }
      .row--footer .col-1-of-2:nth-child(1) {
        left: calc(var(--clip-path-footer-x2) / 4);
        display: none; }
      .row--footer .col-1-of-2:nth-child(2) {
        min-width: auto;
        width: 100%;
        height: calc(var(--h-footer) - (10vh * var(--size-section))); } }

.beam {
  background-color: transparent;
  border-radius: 50%;
  /* Нужно border-radius: 50%; луч света расходился по кругу. */
  /* width и height не заданы, чтобы элемента не было видно. */ }
  .beam {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }

/* Помести невидимую точку в центр каждой col, для этого задал col в grid position-relative */
.col-1-of-3:hover .beam {
  animation: beam--1 .6s ease-in forwards; }
  @media only screen and (min-width: 1800px) {
    .col-1-of-3:hover .beam {
      animation: beam--2 .6s ease-in forwards;
      width: calc(calc(var(--card-size) * 1.1) * 1.5);
      height: calc(calc(var(--card-size) * 1.1) * 1.5); } }

/* Анимация до 1800px работает из центра, после 1800 из контура */
.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  opacity: 0.3; }
  .bg-video__content {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top; }

/* Основа */
.btn {
  position: relative;
  appearance: none;
  border: none;
  background: transparent;
  color: white;
  letter-spacing: 1px;
  font-weight: 600;
  outline: none;
  padding: 0;
  margin: 0;
  z-index: 1; }
  .btn:active {
    filter: drop-shadow(0px 0px 3px rgba(190, 242, 100, 0.5)); }

@media (min-width: 600px) {
  .btn {
    font-size: 20px;
    width: calc(70px + 12vw);
    height: 50px;
    opacity: 0;
    overflow: hidden;
    margin-top: 2.3rem; }
    .btn span {
      display: block;
      position: relative;
      line-height: 50px;
      height: 50px;
      cursor: pointer; }
    .btn > span:before {
      content: '';
      position: absolute;
      top: 0;
      right: 50%;
      width: 20px;
      height: 0;
      border: 1px solid white;
      border-right: none;
      border-bottom: none; }
    .btn > span:after {
      content: '';
      position: absolute;
      top: 0;
      left: 50%;
      width: 20px;
      height: 0;
      border: 1px solid white;
      border-left: none;
      border-bottom: none; }
    .btn > span > span:before {
      content: '';
      position: absolute;
      bottom: 0;
      right: 0.2%;
      width: 1px;
      height: 1px;
      opacity: 0; }
    .btn > span > span:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0.2%;
      width: 1px;
      height: 1px;
      opacity: 0; }
  /* Анимация */
  .btn {
    animation: clean 1s 5s forwards; }
    .btn > span:after {
      animation: border-mid-w .5s forwards 5s, border-mid-h .5s forwards 5.5s; }
    .btn > span:before {
      animation: border-mid-w .5s forwards 5s, border-mid-h .5s forwards 5.5s; }
    .btn > span > span:before {
      animation: border-bot .5s forwards 6s; }
    .btn > span > span:after {
      animation: border-bot .5s forwards 6s; }
  /* Анимация debug */
  /* Заливка */
  .btn:after, .btn:before {
    background: rgba(255, 255, 255, 0.05);
    content: ' ';
    display: block;
    height: 100%;
    position: absolute;
    transform: skewX(-45deg);
    -webkit-transform: skewX(-45deg);
    width: 0%;
    z-index: -1;
    -webkit-transition: all .35s ease-in-out;
    transition: all .35s ease-in-out; }
  .btn:after {
    bottom: 0;
    right: -20%; }
  .btn:before {
    top: 0;
    left: -20%; }
  .btn:hover:after {
    width: 150%; }
  .btn:hover:before {
    width: 150%; } }

/* Кнопка после 600px */
@media screen and (min-width: 0px) and (max-width: 600px) {
  .btn {
    font-size: calc(16px + (24 - 16) / (600 - 310) * (100vw - 310 * 1px));
    margin-top: 3.5rem;
    width: calc(calc(16px + (24 - 16) / (600 - 310) * (100vw - 310 * 1px)) * 3);
    height: calc(calc(16px + (24 - 16) / (600 - 310) * (100vw - 310 * 1px)) * 3);
    line-height: calc(calc(16px + (24 - 16) / (600 - 310) * (100vw - 310 * 1px)) * 3);
    text-align: center; }
  /* функционал */
  .btn-600::before,
  .btn-600::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    border: 1px solid rgba(255, 255, 255, 0.5); }
    .btn-600::before,
    .btn-600::after {
      filter: drop-shadow(0px 0px 3px rgba(254, 252, 232, 0.5)); }
  .btn-600::before {
    animation: rotateccw 6s infinite linear; }
  .btn-600:hover::before {
    animation: rotatecw 3s infinite linear; }
  .btn-600::after {
    animation: rotatecw 8s infinite linear; }
  .btn-600:hover::after {
    animation: rotateccw 4s infinite linear; }
  .btn-600::after,
  .btn-600::before {
    transition-duration: .5s; }
  .btn-600:hover::before, .btn-600:hover::after {
    background: rgba(255, 255, 255, 0.05); }
  .btn-600:active::after,
  .btn-600:active::before {
    filter: drop-shadow(0px 0px 3px #bef264); }
  /* Анимация  */
  .btn-600 {
    animation: MoveBot 5s ease-out, clean 5s ease-in; } }

.card {
  /*  Особенности scss, чтобы правило на топ переписалось */
  width: var(--card-size);
  height: var(--card-size);
  color: #ffffff;
  display: flex;
  flex-direction: column;
  text-decoration: none;
  /* Убрал подчеркивание с текста */ }
  .card {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .card {
    top: +50%; }
  .card__logo {
    width: calc(var(--card-size) * 0.7);
    height: calc(var(--card-size) * 0.7);
    /* Высота, ширина, маргин-топ заданы исходя из общих раземеров карточки для симметрии. */
    /* Маска нужна для того чтобы через background в hover задавать цвет для svg */ }
    .card__logo {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); }
    .card__logo--1 {
      background: url(../img/svg/youtube.svg) no-repeat 50%/140%;
      mask: url(../img/svg/youtube.svg) no-repeat 50%/140%;
      /* 140% заданы, чтобы занять полный размер __logo, убрав пустое лишние место в самой svg */ }
    .card__logo--2 {
      background: url(../img/svg/fandom.svg) no-repeat 50%/100%;
      mask: url(../img/svg/fandom.svg) no-repeat 50%/100%;
      top: 45%;
      /* Поднял из-за текста снизу. include дает top:50%. Уменьшел размер svg из-за текста. */ }
    .card__logo--3 {
      background: url(../img/svg/discord.svg) no-repeat 50%/140%;
      mask: url(../img/svg/discord.svg) no-repeat 50%/140%;
      /* 140% заданы, чтобы занять полный размер __logo, убрав пустое лишние место в самой svg */ }
  .card__text {
    /*  Особенности scss, чтобы правило на топ переписалось */
    text-align: center;
    padding-left: .5rem;
    /* Выравнил текст */
    font-weight: 700;
    line-height: 1;
    /* Толкнул текст от лого */
    font-size: calc(0.13 * calc(var(--card-size) * 0.7));
    /* Будет зависим от размера логотипа, а тот от размера карточки в целом. */ }
    .card__text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); }
    .card__text {
      top: 85%;
      /* Толкнул под logo */ }

.card {
  /* анимация окантовки */
  /* для удваивания анимации */
  /* Тень (свет) при наведении. */
  /* Тень (свет) при нажатии */ }
  .card::before, .card::after {
    content: '';
    z-index: -1;
    margin: -5%;
    box-shadow: inset 0 0 0 1.5px;
    animation: clipMe 12s linear infinite; }
  .card::before {
    animation-delay: -6s; }
  .card:hover {
    filter: drop-shadow(0px 0px 3px rgba(254, 252, 232, 0.7)); }
  .card:active {
    filter: drop-shadow(0px 0px 3px #bef264); }

.cube {
  display: flex;
  transform: translateZ(calc(var(--cube-side) * 8));
  margin: 0;
  transform-style: preserve-3d;
  position: relative;
  width: calc(var(--cube-side)*8);
  height: calc(var(--cube-side)*8);
  pointer-events: none; }
  .cube a {
    transform-style: preserve-3d;
    transform-origin: calc(var(--cube-side) * 4) calc(var(--cube-side) * 4) calc(var(--cube-side) * -4);
    display: block;
    position: absolute;
    z-index: 1;
    transform: translateZ(calc(var(--cube-side) * 2));
    width: 100%;
    height: 100%;
    pointer-events: auto; }
    .cube a:nth-child(1) {
      top: 0;
      left: 0;
      height: 50%;
      clip-path: polygon(50% 100%, 0 0, 100% 0); }
      .cube a:nth-child(1):hover ~ .cube-side {
        transform: rotateX(-0.5turn); }
        .cube a:nth-child(1):hover ~ .cube-side div:nth-child(6) {
          transform: rotateY(180deg) rotateZ(180deg) translateZ(calc(var(--cube-side) * 8)); }
    .cube a:nth-child(2) {
      top: 0;
      right: 0;
      width: 50%;
      clip-path: polygon(100% 100%, 0 50%, 100% 0); }
      .cube a:nth-child(2):hover ~ .cube-side {
        transform: rotateY(-0.5turn); }
    .cube a:nth-child(3) {
      bottom: 0;
      right: 0;
      height: 50%;
      clip-path: polygon(0 100%, 50% 0, 100% 100%); }
      .cube a:nth-child(3):hover ~ .cube-side {
        transform: rotateX(0.5turn); }
        .cube a:nth-child(3):hover ~ .cube-side div:nth-child(6) {
          transform: rotateY(180deg) rotateZ(180deg) translateZ(calc(var(--cube-side) * 8)); }
    .cube a:nth-child(4) {
      bottom: 0;
      left: 0;
      width: 50%;
      clip-path: polygon(0 100%, 0 0, 100% 50%); }
      .cube a:nth-child(4):hover ~ .cube-side {
        transform: rotateY(0.5turn); }
    .cube a:nth-child(1):hover, .cube a:nth-child(2):hover, .cube a:nth-child(3):hover, .cube a:nth-child(4):hover {
      z-index: 2;
      transform: translateZ(calc(var(--cube-side) * 8));
      width: 100% !important;
      height: 100% !important;
      -webkit-clip-path: none !important;
      clip-path: none !important;
      transition: all 100ms ease 500ms; }
  .cube .cube-side {
    transform-style: preserve-3d;
    transform-origin: calc(var(--cube-side) * 4) calc(var(--cube-side) * 4) calc(var(--cube-side) * -4);
    position: relative;
    z-index: 0;
    display: block;
    width: 100%;
    height: 100%;
    transition: all 300ms ease-out;
    pointer-events: none; }
    .cube .cube-side div {
      display: flex;
      align-items: center;
      align-content: center;
      justify-content: center;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      color: white;
      pointer-events: none;
      backface-visibility: hidden; }
      .cube .cube-side div:nth-child(1) {
        transform-origin: center top;
        transform: rotateX(90deg) translateY(calc(var(--cube-side) * -8));
        background: #dce3ff; }
      .cube .cube-side div:nth-child(2) {
        transform-origin: center bottom;
        transform: rotateX(-90deg) translateY(calc(var(--cube-side) * 8));
        background: #8fa8ff; }
      .cube .cube-side div:nth-child(3) {
        transform-origin: left center;
        transform: rotateY(-90deg) translateX(calc(var(--cube-side) * -8));
        background: #8fa8ff; }
      .cube .cube-side div:nth-child(4) {
        transform-origin: right center;
        transform: rotateY(90deg) translateX(calc(var(--cube-side) * 8));
        background: #8fa8ff; }
      .cube .cube-side div:nth-child(5) {
        transform-origin: center center;
        transform: rotateX(0);
        background: #2959ff; }
      .cube .cube-side div:nth-child(6) {
        transform-origin: center center;
        transform: rotateY(180deg) translateZ(calc(var(--cube-side) * 8));
        background: white;
        color: #839deb; }

.cube-perspective {
  width: calc(var(--cube-side)*16);
  height: calc(var(--cube-side)*16);
  perspective-origin: 90% 10%;
  perspective: 900px;
  pointer-events: none; }
  .cube-perspective {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }

.cube-typography {
  font-size: calc(var(--cube-side) * 0.75);
  font-weight: 500; }

.kubarik--footer {
  width: 100%; }
  .kubarik--footer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .kubarik--footer {
    top: 47.5%; }
  @media only screen and (max-width: 900px) {
    .kubarik--footer {
      width: 60%;
      top: 34%; } }
  @media only screen and (max-width: 600px) {
    .kubarik--footer {
      top: 39%; } }
  @media only screen and (max-width: 340px) {
    .kubarik--footer {
      width: 100%;
      height: 100%; }
      .kubarik--footer {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); } }

.kubarik--footer a {
  pointer-events: auto; }

.kubarik--footer p {
  pointer-events: none; }

.kubarik--footer a {
  animation: none;
  /* Изначально анимация отключена */
  transition: filter 0.6s ease-in;
  /* Плавный переход для фильтра */ }

.kubarik--footer a:hover {
  filter: none;
  /* Элемент <a> под курсором остается четким благодаря filter: none;. */ }

.kubarik--footer a.blur {
  filter: blur(3px);
  /* Класс .blur добавляет эффект размытия ко всем элементам <a>, кроме того, на который наведен курсор. */ }

.kubarik--footer p {
  text-align: center;
  white-space: wrap;
  font-weight: 600;
  width: 100%;
  height: 100%;
  color: #ffffff;
  font-size: calc(6px + 1vw); }
  @media only screen and (max-width: 900px) {
    .kubarik--footer p {
      font-size: calc(8px + 1vw); } }
  @media only screen and (max-width: 340px) {
    .kubarik--footer p {
      font-size: calc(6px + 4vw); } }

.kubarik--footer a {
  color: #fffa99;
  text-decoration: none; }

.cube--footer {
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }

.cube--footer {
  transform: translate(-50%, -50%); }

.cube--footer:hover {
  filter: drop-shadow(0px 0px 15px rgba(51, 154, 240, 0.7)); }

@media only screen and (max-width: 900px) {
  .cube-perspective--footer {
    perspective: 450px; } }

@media only screen and (max-width: 900px) {
  .cube-typography--footer {
    font-size: calc(var(--cube-side) * 1); } }

/* Порядок подлючения не в алфавитном порядке, т.к последовательность подключения имеет значение. */
